
name: 🦺Lint

on:
  # push:
  #   branches: ["main","dev"]
  # pull_request:
  # workflow_dispatch:
  # schedule:
  #   - cron: '42 23 * * 5'
 
  workflow_call:

jobs:
  validate-commit-message:
    name: Validate Commit Message
    runs-on: ubuntu-latest
    steps:
      - name: Validate Commit Message Content
        uses: gsactions/commit-message-checker@v2
        with:
          pattern: '^((fix|🎨|:art:|🐛|:bug:|🚑|:ambulance:|⚡|:zap:|🔥|:fire:|🚨|:rotating_light:|♻️|:recycle:|🔧|:wrench:|⬆️|:arrow_up:|🩹|:adhesive_bandage:|👷|:construction_worker:|:construction_worker_man:|📝|:memo:|🔒|:lock:|👽|:alien:|💬|:speech_balloon:|🥅|:goal_net:|✅|:white_check_mark:|🐳|:whale:|🙈|:see_no_evil:|⚗️|:alembic:|:monocle_face:|🧐|🔇|:mute:|🔊|:volume:|:loud:|:loud_sound:|feat|🥚|:egg:|🚀|:rocket:|💄|:lipstick:|✨|:sparkles:|BREAKING|💥)(.*\s*)*)|(Merge|update|Update|Refactored|Dev (.*\s*)*)|(Initial commit$)'
          #accessToken: ${{ secrets.GITHUB_TOKEN }}
          error: 'Semantic message not valid'

  coding-standards:

    ruff:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - uses: chartboost/ruff-action@v1

    name: super-linter
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.5.3

      - name: Lint Code Base
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LOG_LEVEL: WARN
          VALIDATE_GITLEAKS: false
          VALIDATE_JSCPD: false
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_FLAKE8: false
          VALIDATE_PYTHON_ISORT: false
          VALIDATE_PYTHON_PYLINT: false
          VALIDATE_PYTHON_MYPY: false
          YAML_ERROR_ON_WARNING: false
          # LINTER_RULES_PATH: ./
    
    # black:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v3
    #         - uses: psf/black@stable
    #           with:
    #               options: --check --verbose

    # mypy:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Checkout Code
    #           uses: actions/checkout@v3

    #         - name: Set up Python
    #           uses: actions/setup-python@v4
    #           with:
    #               cache: pip
    #               python-version-file: .python-version

    #         - name: Install dependencies
    #           run: |
    #               python3 -m pip install --upgrade pip wheel mypy
    #               python3 -m pip install -r requirements.txt
    #         - name: Lint with mypy
    #           run: |
    #               mkdir -p .mypy_cache
    #               mypy --install-types --non-interactive

    # pylint:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Checkout Code
    #           uses: actions/checkout@v3

    #         - name: Set up Python
    #           uses: actions/setup-python@v4
    #           with:
    #               cache: pip
    #               python-version-file: .python-version

    #         - name: Install dependencies
    #           run: |
    #               python3 -m pip install --upgrade pip wheel pylint
    #               python3 -m pip install -r requirements.txt

    #         - name: Lint with pylint
    #           run: |
    #               pylint artistools
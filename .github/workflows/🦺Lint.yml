
name: 🦺Lint

on:
  # push:
  #   branches: ["main","dev"]
  # pull_request:
  # workflow_dispatch:
  # schedule:
  #   - cron: '42 23 * * 5'
  #!contains(github.event.head_commit.message, 'fix|🎨|:art:|🐛|:bug:|🚑|:ambulance:|⚡|:zap:|🔥|:fire:|🚨|:rotating_light:|♻️|:recycle:|🔧|:wrench:|⬆️|:arrow_up:|🩹|:adhesive_bandage:|👷|:construction_worker:|:construction_worker_man:|📝|:memo:|🔒|:lock:|👽|:alien:|💬|:speech_balloon:|🥅|:goal_net:|✅|:white_check_mark:|🐳|:whale:|🙈|:see_no_evil:|⚗️|:alembic:|🧐|:monocle_face:|🔇|:mute:|🔊|:loud:|feat|🥚|:egg:|🚀|:rocket:|💄|:lipstick:|✨|:sparkles:|BREAKING|💥|:boom:|Merge|Update|Refactored|Initial commit')

  workflow_call:

jobs:
  # semantic-check:
  #   name: CommitLint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: workflow detail
  #       run: |
  #         echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
  #         echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
  #         echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
  #     - name: Check out repository
  #       uses: actions/checkout@v3.5.3
  #       with:
  #         fetch-depth: 0
  #     - name: Check commit title
  #       run: |
  #         commit_title="$(git log -1 --no-merges --pretty=%B)"
  #         echo "🔎 The name of your commit is $(git log -1 --no-merges --pretty=%B)"
  #         echo "🔎 The name of your commit is $commit_title"
  #         echo "🔎 The name of your commit ${{ github.event.commits[0].message }} "
  #         if [[!startsWith("$commit_title", fix)]]; then
  #           echo "Missing some config in $commit_title"
  #           exit 1
  #         else
  #           echo "Success"
  #         fi
  validate-commit-message:
    name: Validate Commit Message
    runs-on: ubuntu-latest
    steps:
      - name: Validate Commit Message Content
        uses: gsactions/commit-message-checker@v2
        with:
          pattern: '^((fix|🎨|:art:|🐛|:bug:|🚑|:ambulance:|⚡|:zap:|🔥|:fire:|🚨|:rotating_light:|♻️|:recycle:|🔧|:wrench:|⬆️|:arrow_up:|🩹|👷|:construction_worker:|:construction_worker_man:|📝|:memo:|🔒|:lock:|👽|:alien:|💬|🥅|✅|:white_check_mark:|🐳|:whale:|🙈|⚗️|🧐|🔇|:mute:|🔊|:loud:|feat|🥚|:egg:|🚀|:rocket:|💄|:lipstick:|✨|:sparkles:|BREAKING|💥)(.*\s*)*)|(Merge|update (.*\s*)*)|(Initial commit$)'
          flags: 'g'
          accessToken: ${{ secrets.GITHUB_TOKEN }}
          error: 'Semantic message not valid'

  coding-standards:
    name: Linting & CodingStandards
    needs: [validate-commit-message]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.5.3

      - name: Lint Code Base
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_MARKDOWN: false
          VALIDATE_PYTHON_MYPY: false
          VALIDATE_PYTHON_FLAKE8: false
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_ISORT: false



name: 🐍Build

on:
  workflow_dispatch:
  workflow_call:

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
            fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          python -m pip install --upgrade pip twine
          pip install poetry
          poetry install

      - name: Build package
        run: poetry build

  req:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    #if: ${{ github.event_name == 'pull_request' }}
    #&& ${{ github.actor != 'renovate[bot]' && github.actor != 'dependabot[bot]' }} && (github.actor != 'github-actions[bot]')
    if: ${{ github.event_name == 'pull_request' }} && (${{github.actor != 'dependabot[bot]' }} || ${{github.actor != 'renovate[bot]' }} || ${{github.triggering_actor !='renovate[bot]' }})
    steps:
      - uses: actions/checkout@v4
        with:
            fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          python -m pip install --upgrade pip twine
          pip install poetry
          poetry install

      - name: Build package
        run: poetry build
      - name: Update requirements
        run: |
          poetry lock
          poetry export --without-hashes --format=requirements.txt > requirements.txt
          cp requirements.txt .requirements/requirements.txt

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
            repository: .
            commit_message: Update Requirements
            file_pattern: .requirements/

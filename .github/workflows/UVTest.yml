name: ‚ö°Test (UV)

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      repo:
        required: false
        type: string
        default: dev
      # Retain environment input if needed by secrets step
      environment:
        required: false # Adjust as needed
        type: string
        default: '' # Or a sensible default

jobs:
  test:
    name: ‚ö° Test (UV)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11.6"] # Consider making this dynamic or matching build
        include:
          - experimental: true # Keep if needed for Python setup
          # Removed check-latest, assuming not relevant for UV specific setup

    # Pass environment if needed by secrets step
    environment: ${{ inputs.environment }}
    steps:
      - name: üì• Checkout the repository
        uses: actions/checkout@v4

      - name: üêç Set up Python & UV
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: ${{ matrix.experimental }}
          # cache: 'uv' # Cache UV dependencies - Removed, not supported yet

      - name: ‚¨áÔ∏è Install uv
        run: pip install uv

      - name: üõ†Ô∏è Install dependencies
        run: uv sync --all-extras # Install main and optional/dev dependencies for tests

      - name: üîíÔ∏è Install 1Password CLI
        uses: 1password/install-cli-action@v1

      - name: üîíÔ∏è Get Secrets
        run: |
          # Ensure SETTINGS env var doesn't conflict if op read uses it differently
          OP_SETTINGS_PATH=$(op read op://git/SETTINGS/${{ inputs.repo }})
          echo "Reading settings from: $OP_SETTINGS_PATH"
          op read $OP_SETTINGS_PATH > settings.toml
        working-directory: . # Ensure this runs in the correct directory
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      # Keep IBC Gateway step if relevant to the projects using this workflow
      - name: Install IBC Gateway
        if: ${{ github.repository == 'mraniki/cefi' }} # Keep condition or adjust
        run: |
            wget -q https://github.com/IbcAlpha/IBC/releases/download/3.18.0-Update.1/IBCLinux-3.18.0.zip -O ibc.zip \
            && unzip ibc.zip -d /opt/ibc \
            && chmod +x /opt/ibc/*.sh /opt/ibc/*/*.sh

      - name: üß™ Test with pytest
        run: uv run pytest --cov . --cov-report=xml # Use uv run

      - name: üßæ Upload coverage to Codecov
        uses: codecov/codecov-action@v5 # Ensure v5 is the latest or desired version
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          # Consider adding fail_ci_if_error: true

  # Keep test-results job as is
  test-results:
    name: üß™üßæ Test Results
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: ‚ÑπÔ∏è Results Consolidation
        run: |
          echo "Test Results Completed"

  # Keep automerge job as is
  automerge:
    name: ‚õô Enable Pull Request Automerge to dev
    runs-on: ubuntu-latest
    needs: [test-results]
    if: ${{ github.base_ref == 'dev' }}
    steps:
      - name: üì• Checkout the repository
        uses: actions/checkout@v4
      - name: Enable Pull Request Automerge
        run: gh pr merge --auto --merge ${{ github.event.pull_request.number }}
        env:
          GH_TOKEN: ${{ github.token }} # Use github.token for built-in auth
        shell: bash 
# ---
name: ðŸ¥·Prerelease
run-name: ${{ github.actor }} is using ðŸ¥·
on:
  workflow_call:
  workflow_dispatch:

# permissions:
#   contents: write
#   issues: write
#   pull-requests: write

jobs:
    
  # app:
  #   if: github.repository == 'mraniki/tt'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3.5.3
  #       with:
  #         fetch-depth: 0
  #     - name: Semantic Version and Release
  #       if: ${{ github.ref == 'refs/heads/dev' && github.event_name == 'push' }}
  #       uses: relekang/python-semantic-release@v7.34.6
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}

  # package:
  #   if: github.repository != 'mraniki/tt' 
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3.5.3
  #       with:
  #         fetch-depth: 0
  #     - name: Semantic Version and PYPI release
  #       if: ${{ github.ref == 'refs/heads/dev' && github.event_name == 'push' }}
  #       uses: relekang/python-semantic-release@v7.34.6
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         repository_username: __token__
  #         repository_password: ${{ secrets.PYPI_API_TOKEN }}
  #         additional_options: --prerelease --verbosity=DEBUG

  nightly:
    name: ðŸ¥· Build and Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: ${{ github.ref.type == 'dev' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4.1.1
      
      - name: Prepare docker image name
        id: image_names
        run: |
          IMAGES="${GITHUB_REPOSITORY/docker-/},ghcr.io/${GITHUB_REPOSITORY/docker-/}"
          echo "docker_images=$IMAGES" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
      - name: Log in to the ghcr registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker latest
        id: meta
        uses: docker/metadata-action@v4
        with:
          images:  ${{ env.docker_images }}
          tags: nightly
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .registry/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

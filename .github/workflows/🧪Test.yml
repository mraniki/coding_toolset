

name: ðŸ§ªTest

on:
  workflow_dispatch:
  workflow_call:
 
jobs:
  test:
    runs-on: ubuntu-latest
    #runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-latest]
        python-version: ["3.09","3.10", "3.11"]
        #"3.12"]
        include:
          - experimental: true
          - check-latest: true
         # - python-version: "3.12"
         #   experimental: true
    #runs-on: ubuntu-latest
    environment: ${{inputs.environment}}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: ${{ matrix.experimental }}
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Install project
        run: poetry install --sync --no-interaction

      # - name: playwright dependencies
      #   if: github.repository == 'mraniki/tt'
      #   run: |
      #     sudo apt-get -y install chromium-browser
      #     pip install playwright
      #     playwright install
      #     playwright install-deps

      - name: Install 1Password CLI
        uses: 1password/install-cli-action@v1
  
      - name: Get Secrets
        run: |
          op read op://git/devtoml/notesPlain > settings.toml
        working-directory: .
        env:
            OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
  
      - name: Test with pytest
        run: poetry run pytest -v --cov . --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}



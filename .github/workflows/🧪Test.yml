

name: üß™Test

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      repo:
        required: false
        type: string
        default: dev
 
jobs:

  test:
    name: üß™ Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11.6"]
        include:
          - experimental: true
          - check-latest: true
    environment: ${{inputs.environment}}
    steps:
      - name: üì• Checkout the repository
        uses: actions/checkout@v4
      - name: üêç Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: ${{ matrix.experimental }}
          
      - name: üõ†Ô∏è Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Install project
        run: poetry install --sync --no-interaction

      - name: üîíÔ∏è Install 1Password CLI
        uses: 1password/install-cli-action@v1

      - name: üîíÔ∏è Get Secrets
        run: |
          SETTINGS=$(op read op://git/SETTINGS/${{ inputs.repo }})
          echo "$SETTINGS"
          op read $SETTINGS > settings.toml
        working-directory: .
        env:
            OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
  
      - name: Install IBC Gateway
        if: ${{ github.repository == 'mraniki/cefi' }}
        run: |
            wget -q https://github.com/IbcAlpha/IBC/releases/download/3.18.0-Update.1/IBCLinux-3.18.0.zip -O ibc.zip \
            && unzip ibc.zip -d /opt/ibc \
            && chmod +x /opt/ibc/*.sh /opt/ibc/*/*.sh \

      - name: üß™ Test with pytest
        run: poetry run pytest --cov . --cov-report=xml

      # - name: Retry on failure
      #   if: failure()
      #   run: |
      #     sleep 1h
      #     poetry run pytest -v --cov . --cov-report=xml

      - name: üßæ Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test-results:
    name: üß™üßæ Test Results
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: ‚ÑπÔ∏è Results Consolidation
        run: |
          echo "Test Results Completed"

  # automerge:
  #   name: ‚õô Enable Pull Request Automerge
  #   runs-on: ubuntu-latest
  #   needs: [test-results]
  #   permissions:
  #     contents: write
  #   steps:
  #     - name: üì• Checkout the repository
  #       uses: actions/checkout@v4
  #     - name: Enable Pull Request Automerge
  #       run: gh pr merge --auto --merge ${{ github.event.pull_request.number }}
  #       env:
  #         GH_TOKEN: ${{ github.token }}
  #       shell: bash

  
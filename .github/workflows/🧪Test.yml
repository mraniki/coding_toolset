

name: ðŸ§ªTest

on:
  workflow_dispatch:
  workflow_call:
    # inputs:
    #     environment:
    #       description: 'env'
    #       required: false
    #       default: dev
    #       type: string
 
jobs:

  test:
    runs-on: ubuntu-latest
    environment: ${{inputs.environment}}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.5.3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
     # - name: Load cached venv
       # id: cached-poetry-dependencies
        #uses: actions/cache@v3
      #  with:
         # path: .venv
         # key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      # - name: Install dependencies
      #   if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      #   run: poetry install --no-interaction --no-root
      - name: Install project
        run: poetry install --sync --no-interaction
      - name: Install 1Password Cli
        run: |
          curl https://cache.agilebits.com/dist/1P/op2/pkg/v2.18.0/op_linux_amd64_v2.18.0.zip > op.zip
          unzip op.zip
          sudo mv op /usr/local/bin
          rm op.zip

          op user get --me
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Get 1Password Secrets
        # run: op read op://git/dev/notesPlain > .env
        run: op read op://git/dev/notesPlain > settings.toml
        working-directory: .
        env:
            OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      - name: Test with pytest
        run: poetry run pytest -v --cov . --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}


